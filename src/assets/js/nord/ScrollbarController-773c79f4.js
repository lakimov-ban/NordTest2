class t{constructor(t){t.addController(this)}hostDisconnected(){this.unlockScroll()}lockScroll(){if(0===t.locks.size){const e=document.documentElement.clientWidth,s=Math.abs(window.innerWidth-e),o=getComputedStyle(document.body),l=parseInt(o.paddingRight,10)||0;t.setStyle("--n-scrollbar-gutter",`${s+l}px`),t.setStyle("overflow","hidden"),t.setStyle("padding-right","var(--n-scrollbar-gutter)")}t.locks.add(this)}unlockScroll(){t.locks.delete(this),0===t.locks.size&&(t.resets.forEach((t=>t())),t.resets=[])}static setStyle(e,s){const{style:o}=document.body,l=o.getPropertyValue(e);o.setProperty(e,s),t.resets.push((()=>o.setProperty(e,l)))}}t.locks=new Set,t.resets=[];export{t as S};
//# sourceMappingURL=ScrollbarController-773c79f4.js.map
