import{i as r,_ as e,x as o,e as a,s}from"./query-assigned-elements-92ce7494.js";import{l as n}from"./if-defined-cccde88f.js";import{n as i}from"./property-c78323b1.js";import{n as t}from"./ref-99418ab4.js";import{F as d}from"./FocusableMixin-d30213b4.js";import{s as p}from"./Component-2253424f.js";import"./directive-e9ce14b4.js";const c=r`:host{--_n-progress-size:var(--n-progress-size, var(--n-space-s));--_n-progress-border-radius:var(--n-progress-border-radius, var(--n-border-radius-s));--_n-progress-color:var(--n-progress-color, var(--n-color-accent));inline-size:100%}progress{-webkit-appearance:none;-moz-appearance:none;appearance:none;inline-size:100%;block-size:var(--_n-progress-size);background-color:var(--n-color-surface-lowered);border-radius:var(--_n-progress-border-radius);box-shadow:none;display:block;border:0;margin:0}label{display:block}progress::-webkit-progress-bar{background-color:transparent;border-radius:var(--_n-progress-border-radius)}progress::-moz-progress-bar{background:var(--_n-progress-color);border-radius:var(--_n-progress-border-radius)}progress::-webkit-progress-value{background:var(--_n-progress-color);border-radius:var(--_n-progress-border-radius);transition:width .25s ease-out,background .25s ease-out}progress:indeterminate{background-color:var(--n-color-nav-hover);background-image:linear-gradient(to right,transparent 45%,var(--n-color-accent) 0,var(--n-color-accent) 55%,transparent 0);background-position:right;background-size:225% 100%;animation:animate-indeterminate 2s infinite ease}progress:indeterminate::-moz-progress-bar{background-color:transparent}progress:indeterminate::-webkit-progress-value{background-color:transparent}@keyframes animate-indeterminate{50%{background-position:left}}progress:focus{box-shadow:0 0 0 1px var(--n-color-background),0 0 0 3px var(--n-color-accent);outline:0}`;let l=class extends(d(s)){constructor(){super(...arguments),this.max=100,this.label="Current progress"}render(){return o`<label><nord-visually-hidden>${this.label}</nord-visually-hidden><progress ${t(this.focusableRef)} aria-valuenow="${n(this.value)}" aria-valuemin="0" aria-valuemax="${this.max}" tabindex="-1" max="${this.max}" value="${n(this.value)}"></progress></label>`}};l.styles=[p,c],e([i({reflect:!0,type:Number})],l.prototype,"value",void 0),e([i({reflect:!0,type:Number})],l.prototype,"max",void 0),e([i({reflect:!0})],l.prototype,"label",void 0),l=e([a("nord-progress-bar")],l);var b=l;export{b as default};
//# sourceMappingURL=ProgressBar.js.map
